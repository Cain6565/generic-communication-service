server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /

spring:
  application:
    name: generic-communication-service

  # Database konfigürasyonu
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/argela}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:1234}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 600000

  # JPA konfigürasyonu
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: update
    show-sql: ${SHOW_SQL:true}
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: UTC

  # RabbitMQ konfigürasyonu
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:localhost}
    port: ${SPRING_RABBITMQ_PORT:5672}
    username: ${SPRING_RABBITMQ_USERNAME:guest}
    password: ${SPRING_RABBITMQ_PASSWORD:guest}
    virtual-host: ${SPRING_RABBITMQ_VHOST:/}
    connection-timeout: 30000
    listener:
      type: simple
      simple:
        concurrency: 1
        max-concurrency: 5
        retry:
          enabled: true
          max-attempts: 3
          initial-interval: 1000
          multiplier: 2
          max-interval: 10000
    template:
      retry:
        enabled: true
        initial-interval: 1000
        max-attempts: 3
        multiplier: 2
        max-interval: 10000

  # JSON konfigürasyonu
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null

# Actuator endpoints (monitoring için)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized

# Basit logging
logging:
  level:
    org.hibernate.SQL: ${LOG_SQL:DEBUG}
    org.springframework.amqp: ${LOG_RABBITMQ:INFO}
    org.argela.genericcommunicationservice: ${LOG_APP:DEBUG}

# CORS konfigürasyonu
app:
  cors:
    allowed-origins: ${CORS_ORIGINS:*}
    max-age: 3600